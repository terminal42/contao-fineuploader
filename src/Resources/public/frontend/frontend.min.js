!function(e,t){"function"==typeof define&&define.amd?define([],t(e)):"object"==typeof exports?module.exports=t(e):e.ContaoFineUploaderFrontend=t(e)}("undefined"!=typeof global?global:this.window||this.global,function(e){"use strict";function t(e,t,a){this.container=e,this.config=t,a=a||{},this.settings=JSON.parse(JSON.stringify(i));for(var n in a)a.hasOwnProperty(n)&&(this.settings[n]=a[n]);this.initUploader(),this.makeSortable()}var i={ajaxActionName:"fineuploader_reload",errorMessage:""};return t.prototype={initUploader:function(){this.config.configCallback=this.configCallback.bind(this),this.uploader=new ContaoFineUploader(this.container,this.config),this.uploader.initFineUploader()},configCallback:function(e){e.callbacks.onComplete=this.onCompleteCallback.bind(this)},makeSortable:function(){var e=this.uploader.ajaxContainer.querySelector(".sortable");null!==e&&new Sortable(e,{dataIdAttr:"data-item-id",store:{get:function(){return this.uploader.field.value.split(",")}.bind(this),set:function(e){this.uploader.field.value=e.toArray().join(",")}.bind(this)}})},onCompleteCallback:function(e,t,i){i.success&&(this.uploader.onComplete.apply(this.uploader,arguments),this.uploader.fineUploader.getInProgress()>0||$.ajax({data:{action:this.settings.ajaxActionName,name:this.uploader.field.name,value:this.uploader.currentValue,REQUEST_TOKEN:this.uploader.field.form.querySelector('input[name="REQUEST_TOKEN"]').value},dataType:"html",method:"POST",beforeSend:function(){$(this.uploader.ajaxContainer).addClass("ajax-loading")}.bind(this),complete:function(){$(this.uploader.ajaxContainer).removeClass("ajax-loading")}.bind(this),error:function(){alert(this.settings.errorMessage)}.bind(this),success:function(e){this.uploader.setAjaxContainerContent(e),this.makeSortable()}.bind(this)}))}},t});